{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAKA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAZAO,SAASC,cAAc,SAC/BC,iBAAiB,UAetB,SAAkBC,GAChBA,EAAEC,iBACF,MAAMC,OAAEA,EAAMC,KAAEA,EAAMb,MAAAc,GAAUJ,EAAEK,OAAOC,SACzC,IAAIC,EAAcC,OAAON,EAAOO,OAC5BC,EAAYF,OAAOL,EAAKM,OACxBE,EAAaH,OAAOJ,EAAMK,OAE9B,IAAK,IAAIG,EAAQ,EAAGA,EAAQL,EAAaK,GAAS,EAChDxB,EAAcwB,EAAQ,EAAGD,GACtBE,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqB3B,QAAiBC,MAAU,IAGnD2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoB7B,QAAeC,MAAU,IAGnDqB,GAAcD,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  const { amount, step, delay } = e.target.elements;\n  let amountValue = Number(amount.value);\n  let stepValue = Number(step.value);\n  let delayValue = Number(delay.value);\n\n  for (let index = 0; index < amountValue; index += 1) {\n    createPromise(index + 1, delayValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayValue += stepValue;\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","e","preventDefault","amount","step","delay1","target","elements","amountValue","Number","value","stepValue","delayValue","index","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.1f770d46.js.map"}